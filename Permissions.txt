introductions:
	permission tells us what a person can or cannot do with a file/dir
	By modifying permissions on linux, we can make sure files that cannot be changed will not be changed
materials and examples
	3 letters to rule them all
	r READ
		may only read contents of file
	w WRITE
		may change the contents of file
	x EXCUTE
		you may execute the or run the file if it is a program or script
		
	3 groups of people that has different authority
	1.Owner
		single person that created the file
	2.Group
		every file that belongs to a single group
	3.Other
		everyone else beside the group and the owner
		
	With this, we can set different set of permissions for each Group
	Thus, we will need to know how to change and view permissions
	1. view permissions
		this can be done with long list option
		$ ls -l [path]
		eg.
		$ls -l /home/ryan/linuxtutorialwork/frog.png
		$-rwxr----x 1 harry users 2.7K Jan 4 07:32 /home/ryan/linuxtutorialwork/frog.png
		there are typically 10 letters in the permission text of any file/dir, which can be split up into 4 different segments
		a. 1st character: 
				either '-' or 'd', 
				'-' means its a file
				'd' means ins a directory
		b. 2nd-4th characters:
			permission for the owner
		c.5th-7th character:
			permissions for group
		d.8th -10th character:
			permission for others
			
	2.change permissions
		$chmod [permissions] [path]
		this consists of 3 parts
		1.who are we changing the permission for?
			[ugoa] 
			u for user/owner
			g for group
			o for others
			a for all
			
		2. are we granting or revoking permission?
			'+' is giving permission
			'-' is revoking permission
		3. which permission are we granting/revoking?
			eg. -r
			means revoking reading rights
			eg. -rw 
			removing reading and writing rights
			eg. +x 
			grantng executablity of the file
		
		Example1:
			$chmod u+x file
			grant permission to owner to execute file.py
		example2:
			$chmod uo+x file
			grant permission to owner and others to execute the file
		example3:
			$chmod a-r file
			remove permission for all to remove the file
			
	3. Settings Permissions shorthands
		using binary method.
		need to be familiar with binary to know
		so not the best method to change permission if knowledge of binary is weak
		$chmod <permission consist of 3 digits representing the permissions for 3 groups of users> <file>
		Example :
		$chmod 420 file
		This mean meant that the user. 4- 100, 2 -010 , 0-000
		
	4. The root user:
		there are only 2 people ussually who may change the permission of a file or a directory
		the owner of the file/directory and the root user
		the root user is the superuser
		
		
		
		
			
		
		
summary
excercises